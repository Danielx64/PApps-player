<Window x:Class="PAppsplayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PAppsplayer"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
        mc:Ignorable="d"
        WindowState="Maximized"
		WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        Loaded="Window_Loaded"
        Title="MainWindow" Height="450" Width="800">

	<DockPanel LastChildFill="True">

		<!--The tab control with with tab tearing support.-->
		<ct:ChromeTabControl x:Name="tabControl1"
                             MaximumTabWidth="200"
                             TabPersistBehavior="Timed"
                             TabPersistDuration="0:0:0:5"
                             AddTabButtonBehavior="OpenNewTab"
                             Background="AliceBlue"
                             ItemsSource="{Binding Path= WebView2Tabs, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                             SelectedItem="{Binding SelectedTab}"
                             SelectedTabBrush="WhiteSmoke"
                             CanMoveTabs="True"
                             DragWindowWithOneTab="True"
                             IsAddButtonVisible="True"
                             AddTabCommand="{Binding AddTabCommand}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             ReorderTabsCommand="{Binding ReorderTabsCommand}">

			<!--We override the control template here to show how you can modify the properties of tab panel and content presenter-->
			<ct:ChromeTabControl.Template>
				<ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="30" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding Background}"
                                BorderThickness="0,0,0,1"
                                BorderBrush="#FF999999"
                                Grid.Row="0"
                                Padding="10,5,10,0">
							<ct:ChromeTabPanel IsItemsHost="True"
                                               Background="{TemplateBinding Background}" />
						</Border>

						<Grid Grid.Row="1"
                              Visibility="Visible">
							<ContentPresenter Content="{TemplateBinding SelectedContent}" />
						</Grid>
						<Grid x:Name="PART_ItemsHolder"
                              Grid.Row="1"
                              Visibility="Visible" />
					</Grid>
				</ControlTemplate>
			</ct:ChromeTabControl.Template>
			<!--We must override the item template to show our tab name in the header. Here we use a simple
            textblock, but you could put any combination of controls here. Uncomment the orange border to show
            the bounds of the header content presenter-->
			<ct:ChromeTabControl.ItemTemplate>
				<DataTemplate>
					<Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

						<!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
						<StackPanel Orientation="Horizontal"
                                    Background="Transparent">
							<TextBlock Text="test title"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center" />
						</StackPanel>
						<!--</Border>-->

						<!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
						<Grid.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Close"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<MenuItem Header="Close all"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<MenuItem Header="Close other tabs"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />

							</ContextMenu>
						</Grid.ContextMenu>
					</Grid>
				</DataTemplate>
			</ct:ChromeTabControl.ItemTemplate>
		</ct:ChromeTabControl>
	</DockPanel>
</Window>